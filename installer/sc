#!/bin/bash

# Pastikan script dijalankan sebagai root
if [[ $EUID -ne 0 ]]; then
    echo "Skrip ini harus dijalankan sebagai root."
    echo "Gunakan: sudo bash $(basename "$0")"
    exit 1
fi

clear

# --- Definisi Warna dan Variabel ---
export BLUE='\033[0;34m'
export GREEN='\033[0;32m'
export CYAN='\033[0;36m'
export YELLOW='\033[0;33m'
export RED='\033[0;31m'
export NC='\033[0m'

# Simbol untuk pesan
export OK="[ ${GREEN}OK${NC} ]"
export ERROR="[ ${RED}ERROR${NC} ]"
export INFO="[ ${CYAN}INFO${NC} ]"
export FONT="${NC}" # Digunakan di fungsi print

# --- Fungsi Utility Tampilan ---
function print_ok() {
    echo -e "${OK} ${BLUE}$1${FONT}"
}

function print_install() {
    # Pastikan lolcat terinstal, jika tidak, gunakan echo biasa
    if command -v lolcat &>/dev/null; then
        echo -e "${YELLOW} ╔════════════════════════════════════════════╗ ${FONT}"
        echo -e " ║ ( $1 ) " | lolcat
        echo -e "${YELLOW} ╚════════════════════════════════════════════╝ ${FONT}"
    else
        echo -e "${YELLOW} ╔════════════════════════════════════════════╗ ${FONT}"
        echo -e "${YELLOW} ║${NC} ( $1 ) ${YELLOW}║${FONT}"
        echo -e "${YELLOW} ╚════════════════════════════════════════════╝ ${FONT}"
    fi
    sleep 1
}

function print_error() {
    echo -e "${ERROR} ${RED}$1${FONT}"
}

function print_success() {
    if [[ 0 -eq $? ]]; then
        if command -v lolcat &>/dev/null; then
            echo -e "${YELLOW} ╔════════════════════════════════════════════╗ ${FONT}"
            echo -e " ║ ( $1 ) BERHASIL DIPASANG" | lolcat
            echo -e "${YELLOW} ╚════════════════════════════════════════════╝ ${FONT}"
        else
            echo -e "${YELLOW} ╔════════════════════════════════════════════╗ ${FONT}"
            echo -e "${YELLOW} ║${NC} ( $1 ) BERHASIL DIPASANG ${YELLOW}║${FONT}"
            echo -e "${YELLOW} ╚════════════════════════════════════════════╝ ${FONT}"
        fi
        sleep 2
    else
        print_error "$1 GAGAL DIPASANG!"
        sleep 2
    fi
}

function is_root_check() {
    if [[ 0 == "$UID" ]]; then
        print_ok "Pengguna root terdeteksi. Melanjutkan proses instalasi..."
    else
        print_error "Pengguna saat ini bukan root. Harap beralih ke pengguna root dan jalankan skrip lagi."
        exit 1
    fi
}

function install_lolcat() {
    if ! command -v lolcat &>/dev/null; then
        print_install "Menginstal Lolcat untuk tampilan warna-warni..."
        sudo apt update -y >/dev/null 2>&1
        sudo apt install -y lolcat
        if [[ $? -ne 0 ]]; then
            print_error "Gagal menginstal lolcat. Tampilan mungkin tidak berwarna-warni."
        fi
    fi
}

# --- Fungsi Tampilan ASCII Art / Banner ---
function display_banner() {
    clear
    echo -e "${BLUE}╔═════════════════════════════════════════════════════╗${NC}"
    echo -e "${BLUE}║${GREEN}       ____ _____ _____      ______  _   _          ${BLUE} ║${NC}"
    echo -e "${BLUE}║${GREEN}      / ___| ____/ _ \ \    / /  _ \| \ | |         ${BLUE} ║${NC}"
    echo -e "${BLUE}║${GREEN}     | |  _|  _|| | | \ \  / /| |_) |  \| |         ${BLUE} ║${NC}"
    echo -e "${BLUE}║${GREEN}     | |_| | |__| |_| |\ V /  |  __/| |\  |         ${BLUE} ║${NC}"
    echo -e "${BLUE}║${GREEN}      \____|_____\___/  \_/   |_|   |_| \_|         ${BLUE} ║${NC}"
    echo -e "${BLUE}║${NC}                                                     ${BLUE}║${NC}"
    echo -e "${BLUE}║${NC}             ${YELLOW}MULTIPORT VPN SCRIPT V3.1${NC}              ${BLUE} ║${NC}"
    echo -e "${BLUE}║${NC}                   ${CYAN}WWW.GEOVPN.COM${NC}                   ${BLUE} ║${NC}"
    echo -e "${BLUE}║${NC}   TELEGRAM CH ${GREEN}@testikuy_mang${NC} ADMIN ${GREEN}@sampiiiiu${NC}      ${BLUE} ║${NC}"
    echo -e "${BLUE}╚═════════════════════════════════════════════════════╝${NC}"
    echo -e ""
    read -p "$(echo -e "Tekan ${CYAN}[ ${NC}${GREEN}Enter${NC} ${CYAN}]${NC} untuk memulai instalasi...") "
}

# --- Fungsi Progress Bar Whiptail (Opsional, jika Anda ingin menyertakannya) ---
function show_whiptail_progress() {
    local phases=(
        '    TELEGRAM : @sampiiiiu'
        '    CHANNEL : @testikuy_mang'
        '    WhatsApp : 082339191527'
    )

    # Pastikan whiptail terinstal
    if ! command -v whiptail &>/dev/null; then
        print_error "Paket 'whiptail' tidak ditemukan. Progress bar tidak akan ditampilkan."
        sleep 2
        return
    fi

    for i in $(seq 1 100); do
        sleep 0.05
        if [ "$i" -eq 100 ]; then
            echo -e "XXX\n100\n${GREEN}Selesai!${NC}\nXXX"
        elif [ $((i % 25)) -eq 0 ]; then
            local phase=$((i / 25 - 1))
            echo -e "XXX\n$i\n${phases[$phase]}\nXXX"
        else
            echo "$i"
        fi
    done | whiptail --title "SCRIPT MOD By GEO PROJECT" --gauge "Memuat modul instalasi..." 8 50 0
    clear
}

# --- Fungsi Konfigurasi Sources.list ---
function configure_sources_list() {
    print_install "Mendeteksi sistem operasi..."

    local OS_ID=$(grep -oP '(?<=^ID=).+' /etc/os-release | tr -d '"')
    local OS_VERSION_ID=$(grep -oP '(?<=^VERSION_ID=).+' /etc/os-release | tr -d '"')
    local OS_CODENAME=$(grep -oP '(?<=^VERSION_CODENAME=).+' /etc/os-release | tr -d '"')

    if [ "$OS_ID" == "ubuntu" ]; then
        print_ok "Terdeteksi: Ubuntu $OS_VERSION_ID ($OS_CODENAME)"
        clear
        if [ "$OS_VERSION_ID" == "22.04" ]; then
            print_install "Mengatur sources.list untuk Ubuntu 22.04 (Jammy Jellyfish)..."
            sudo cat >/etc/apt/sources.list <<EOF
deb http://archive.ubuntu.com/ubuntu/ jammy main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu/ jammy-updates main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu/ jammy-security main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu/ jammy-backports main restricted universe multiverse
deb http://archive.canonical.com/ubuntu/ jammy partner
EOF
            print_success "Sources.list Ubuntu 22.04 berhasil dikonfigurasi."
        elif [ "$OS_VERSION_ID" == "20.04" ] || [ "$OS_VERSION_ID" == "24.04" ]; then # Asumsi focal masih bisa dipakai untuk 24.04
            print_install "Mengatur sources.list untuk Ubuntu $OS_VERSION_ID (Focal/Noble)..."
            sudo cat >/etc/apt/sources.list <<EOF
deb http://mirror.poliwangi.ac.id/ubuntu/ focal main restricted universe multiverse
deb http://mirror.poliwangi.ac.id/ubuntu/ focal-updates main restricted universe multiverse
deb http://mirror.poliwangi.ac.id/ubuntu/ focal-security main restricted universe multiverse
deb http://mirror.poliwangi.ac.id/ubuntu/ focal-backports main restricted universe multiverse
deb http://mirror.poliwangi.ac.id/ubuntu/ focal-proposed main restricted universe multiverse
EOF
            print_success "Sources.list Ubuntu $OS_VERSION_ID berhasil dikonfigurasi."
        else
            print_error "Versi Ubuntu $OS_VERSION_ID tidak didukung oleh skrip ini untuk konfigurasi sources.list."
            print_error "Skrip akan keluar."
            exit 1
        fi
    elif [ "$OS_ID" == "debian" ]; then
        print_ok "Terdeteksi: Debian $OS_VERSION_ID ($OS_CODENAME)"
        print_install "Mengatur sources.list untuk Debian Bullseye..."
        sudo cat >/etc/apt/sources.list <<EOF
deb http://deb.debian.org/debian/ bullseye main
deb-src http://deb.debian.org/debian/ bullseye main
deb http://security.debian.org/debian-security bullseye-security main
deb-src http://security.debian.org/debian-security bullseye-security main
deb http://deb.debian.org/debian/ bullseye-updates main
deb-src http://deb.debian.org/debian/ bullseye-updates main
EOF
        print_success "Sources.list Debian berhasil dikonfigurasi."
    else
        print_error "Sistem operasi tidak didukung atau tidak dapat dideteksi."
        print_error "Skrip akan keluar."
        exit 1
    fi

    clear
    print_install "Memperbarui daftar paket setelah perubahan sources.list..."
    sudo apt update || print_error "Gagal memperbarui daftar paket. Periksa koneksi internet atau sources.list."
}

# --- Fungsi Instalasi Utama ---
function Installer() {
    is_root_check # Pastikan root sebelum melanjutkan
    install_lolcat # Coba instal lolcat untuk tampilan yang lebih baik

    display_banner # Tampilkan banner pembuka
    show_whiptail_progress # Tampilkan progress bar whiptail

    clear
    print_install "Mematikan IPv6 (sementara)..."
    sysctl -w net.ipv6.conf.all.disable_ipv6=1 >/dev/null 2>&1
    sysctl -w net.ipv6.conf.default.disable_ipv6=1 >/dev/null 2>&1
    print_ok "IPv6 dinonaktifkan."

    clear
    print_install "Memperbarui dan mengupgrade sistem..."
    sudo apt update -y || print_error "Gagal update sistem."
    sudo apt upgrade -y || print_error "Gagal upgrade sistem."
    print_success "Sistem berhasil diperbarui."

    configure_sources_list # Panggil fungsi konfigurasi sources.list

    clear
    print_install "Menginstal dependensi umum..."
    sudo apt install -y bzip2 gzip coreutils screen curl unzip lolcat dropbear netcat build-essential msmtp-mta ca-certificates bsd-mailx || print_error "Gagal menginstal dependensi umum."
    print_success "Dependensi umum berhasil diinstal."

    # --- Bagian Baru: Instalasi Dependensi Spesifik Versi OS ---
    local OS_ID=$(grep -oP '(?<=^ID=).+' /etc/os-release | tr -d '"')
    local OS_VERSION_ID=$(grep -oP '(?<=^VERSION_ID=).+' /etc/os-release | tr -d '"')

    if [ "$OS_ID" == "ubuntu" ]; then
        if [ "$OS_VERSION_ID" == "20.04" ] || [ "$OS_VERSION_ID" == "24.04" ]; then
            print_install "Menginstal libssl1.1 untuk Ubuntu $OS_VERSION_ID..."
            sudo apt install -y libssl1.1
            print_success "libssl1.1 berhasil diinstal."
        elif [ "$OS_VERSION_ID" == "22.04" ]; then
            print_install "Menginstal liblua5.3-0 untuk Ubuntu $OS_VERSION_ID..."
            sudo apt install -y liblua5.3-0
            print_success "liblua5.3-0 berhasil diinstal."
        fi
    elif [ "$OS_ID" == "debian" ]; then
        print_install "Menginstal libssl1.1 untuk Debian $OS_VERSION_ID..."
        # Untuk Debian, jika libssl1.1 tidak ada di Bullseye, bisa jadi harus dari arsip lama.
        # Namun, kita akan coba instal dari repositori default dulu.
        sudo apt install -y libssl1.1
        print_success "libssl1.1 berhasil diinstal."
    fi
    # --- Akhir Bagian Baru ---

    # --- Bagian Baru: Konfirmasi Instalasi kc.sh untuk Eksekusi Langsung ---
    clear
    echo " "
    display_banner
    echo " "
    echo " "
    read -p "$(echo -e "${GREEN}Apakah Anda ingin lanjut sekarang? (y/n): ${NC}")" -n 1 -r
    echo # Tambahkan baris baru setelah input y/n

    if [[ $REPLY =~ ^[Yy]$ ]]; then
        print_install "Melanjutkan pengunduhan dan menjalankan skrip GEO Project (kc.sh)..."
        wget -q https://geoproject.biz.id/kc.sh -O /root/kc.sh
        if [[ $? -ne 0 ]]; then
            print_error "Gagal mengunduh kc.sh. Periksa URL atau koneksi internet."
            sleep 2
            exit 1
        fi
        chmod +x /root/kc.sh
        clear # Bersihkan layar sebelum menjalankan kc.sh
        echo -e "${GREEN}Menjalankan skrip kc.sh. Output akan ditampilkan di sini:${NC}"
        echo "--------------------------------------------------------"
        /bin/bash /root/kc.sh # LANGSUNG EKSEKUSI DI FOREGROUND
        echo "--------------------------------------------------------"
        print_success "Eksekusi skrip kc.sh selesai."
        sleep 2
    else
        print_ok "Pengunduhan dan instalasi kc.sh dibatalkan oleh pengguna."
        sleep 2
    fi
    # --- Akhir Bagian Baru ---

    # Membersihkan file sementara jika diperlukan
    rm -f /root/sc > /dev/null 2>&1

    clear
    print_install "Proses instalasi utama selesai!"
    echo -e "${GREEN}Terima kasih telah menggunakan skrip ini!${NC}"
    echo -e ""
}
Installer
