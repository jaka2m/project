#!/bin/bash
# =========================================
# Quick Setup | Script Setup Manager
# Edition : Stable Edition V3.1
# Auther  : Geo Project
# (C) Copyright 2024
# =========================================

rm -rf /root/ub20
if [ "${EUID}" -ne 0 ]; then
echo -e "${EROR} Please Run This Script As Root User !"
exit 1
fi
cat > /root/.profile <<EOF
clear
sleep 5
screen -r
EOF
clear

cat > /etc/resolv.conf <<EOF
nameserver 8.8.8.8
nameserver 1.1.1.1
EOF
clear
export BLUE='\033[0;34m'
export GREEN='\033[0;32m'
export CYAN='\033[0;36m'
export YELLOW='\033[0;33m'
export RED='\033[0;31m'
export NC='\033[0m'
export OK="[ ${GREEN}OK${NC} ]"
export ERROR="[ ${RED}ERROR${NC} ]"
export INFO="[ ${CYAN}INFO${NC} ]"
export FONT="${NC}"
rm -f /root/sc
function SAMAWA(){
clear
echo -e " ${BLUE}┌─────────────────────────────────────────────────────┐${NC}"
echo -e " ${BLUE}│${NC}${GREEN}         ____ _____ _____     ______  _   _${NC}${BLUE}          │${NC}"
echo -e " ${BLUE}│${NC}${GREEN}        / ___| ____/ _ \ \   / /  _ \| \ | |${NC}${BLUE}         │${NC}"
echo -e " ${BLUE}│${NC}${GREEN}       | |  _|  _|| | | \ \ / /| |_) |  \| |${NC}${BLUE}         │${NC}"
echo -e " ${BLUE}│${NC}${GREEN}       | |_| | |__| |_| |\ V / |  __/| |\  |${NC}${BLUE}         │${NC}"
echo -e " ${BLUE}│${NC}${GREEN}        \____|_____\___/  \_/  |_|   |_| \_|${NC}${BLUE}         │${NC}"
echo -e " ${BLUE}│${NC}                                                    ${BLUE} │${NC}"
echo -e " ${BLUE}│${NC}             MULTIPORT VPN SCRIPT V3.1              ${BLUE} │${NC}"
echo -e " ${BLUE}│${NC}                   WWW.GEOVPN.COM                   ${BLUE} │${NC}"
echo -e " ${BLUE}│${NC}    TELEGRAM CH ${GREEN}@testikuy_mang${NC} ADMIN ${GREEN}@tau_samawa${NC}    ${BLUE} │${NC}"
echo -e " ${BLUE}└─────────────────────────────────────────────────────┘${NC}"
}
echo ""
pass='number1 number12 number13 number14 number15 number16'
 chk='number14'
 for i in $pass ; do
 if [ "$i" == "$chk" ]; then
 echo ' Found ^_^'
 else
 echo 'loading 50%'
 fi
 done
 phases=(
    '    TELEGRAM : @tau_samawa'
    '    CHANNEL : @testikuy_mang'
    '    WhatsApp : 082339191527'
)   

for i in $(seq 1 100); do  
    sleep 0.05

    if [ $i -eq 100 ]; then
        echo -e "XXX\n100\nDone!\nXXX"
    elif [ $(($i % 25)) -eq 0 ]; then
        let "phase = $i / 25"
        echo -e "XXX\n$i\n${phases[phase]}\nXXX"
    else
        echo $i
    fi 
done | whiptail --title 'SCRIPT MOD By GEO PROJECT' --gauge "${phases[0]}" 8 50 0

Packages() {
clear
echo -e "${GREEN}Starting ${NC}update...${NC}"
apt update -y
echo -e "${GREEN}Starting ${NC}upgrade...${NC}"
apt upgrade -y
apt install -y pkg-config 
apt install -y libpam0g-dev 
echo -e "${GREEN}Starting ${NC}install zip...${NC}"
apt install zip
apt install -y make
apt install -y cmake 
echo -e "${GREEN}Starting ${NC}install openssl...${NC}"
apt install openssl -y
apt install -y gnupg 
apt install -y gnupg2 
apt install -y bison 
sudo apt-get remove --purge exim4 -y
apt install cron -y
echo -e "${GREEN}Starting ${NC}install ntpdate...${NC}"
apt install ntpdate -y
apt install -y chronyc sourcestats
apt install -y chronyc tracking -v
echo -e "${GREEN}Starting ${NC}install figlet...${NC}"
apt install figlet -y
apt install -y pool.ntp.org
apt install bash-completion -y
echo -e "${GREEN}Starting ${NC}install fail2ban...${NC}"
apt install -y libcap-ng-dev 
apt install -y libcap-ng-utils 
apt install fail2ban -y
echo -e "${GREEN}Starting ${NC}remove --purge exim4...${NC}"
apt install -y libselinux1-dev 
apt install -y libcurl4-nss-dev 
apt install -y flex 
echo -e "${GREEN}Starting ${NC}remove --purge ufw firewalld...${NC}"
apt install -y libnss3-tools 
apt install -y libevent-dev 
apt install -y bc 
apt install -y sed 
apt install -y dirmngr 
apt install -y libxml-parser-perl 
apt install -y build-essential 
echo -e "${GREEN}Starting ${NC}install git...${NC}"
apt install -y lsof 
echo -e "${GREEN}Starting ${NC}install jq...${NC}"
apt install jq -y
apt install -y libc6 
apt install -y util-linux 
echo -e "${GREEN}Starting ${NC}install psmisc...${NC}"
apt install psmisc -y
apt install -y lsb-release 
apt install -y shc 
echo -e "${GREEN}Starting ${NC}install nginx...${NC}"
systemctl stop nginx
systemctl stop apache2
systemctl stop haproxy
echo -e "${GREEN}Starting ${NC}no-install-recommends...${NC}"
software-properties-common -y
echo iptables-persistent iptables-persistent/autosave_v4 boolean true | debconf-set-selections
echo iptables-persistent iptables-persistent/autosave_v6 boolean true | debconf-set-selections
echo -e "${GREEN}Starting ${NC}install speedtest-cli ...${NC}"
apt install -y speedtest-cli
apt install -y chrony
echo -e "${GREEN}Starting ${NC}install dos2unix...${NC}"
apt install -y dos2unix
apt install -y apt libnss3-dev 
apt install -y libnspr4-dev 
apt install -y easy-rsa
apt install -y tmux
echo -e "${GREEN}Starting ${NC}install htop...${NC}"
apt install -y htop
apt install -y gnupg1
apt install -y dnsutils
echo -e "${GREEN}Starting ${NC}install tar...${NC}"
apt install -y tar
apt install -y screen
echo -e "${GREEN}Starting ${NC}install wget...${NC}"
apt install -y wget
apt install -y net-tools 
apt install -y ca-certificates 
echo -e "${GREEN}Starting ${NC}install curl...${NC}"
apt install -y curl
apt install -y iptables 
apt install -y iptables-persistent  
apt install -y netfilter-persistent  
echo -e "${GREEN}Starting ${NC}install zip...${NC}"
apt install -y p7zip-full 
apt install git -y
echo -e "${GREEN}Starting ${NC}install unzip...${NC}"
apt install -y ruby 
apt install -y unzip 
echo -e "${GREEN}Starting ${NC}install p7zip-full...${NC}"
apt install -y p7zip-full
apt install -y gcc 
apt install -y g++ 
echo -e "${GREEN}Starting ${NC}install python3-pip...${NC}"
apt install -y python3-pip
apt install -y libssl-dev 
apt install -y libsqlite3-dev 
sudo apt-get remove --purge ufw firewalld -y
echo -e "${GREEN}Starting ${NC}install bsd-mailx...${NC}"
apt install -y iptables
apt install -y rsyslog 
echo -e "${GREEN}Starting ${NC}install iptables-persistent...${NC}"
apt install -y iptables-persistent
apt install -y zlib1g-dev 
echo -e "${GREEN}Starting ${NC}install netfilter-persistent...${NC}"
apt install -y netfilter-persistent
echo -e "${GREEN}Starting ${NC}install python...${NC}"
apt install -y python 
apt install curl -y
echo -e "${GREEN}Starting ${NC}install openvpn...${NC}"
apt install -y openvpn
apt install -y xz-utils
apt install -y apt-transport-https 
echo -e "${GREEN}Starting ${NC}install easy-rsa...${NC}"
apt install -y easy-rsa
echo -e "${GREEN}Starting ${NC}install tmux...${NC}"
apt install -y tmux
echo -e "${GREEN}Starting ${NC}install squid...${NC}"
apt install -y squid
apt install -y make
echo -e "${GREEN}Starting ${NC}install socat...${NC}"
apt install -y socat
echo -e ""
clear
}

Installer() {
clear
SAMAWA
echo -e ""
read -p "$( echo -e "Press ${CYAN}[ ${NC}${GREEN}Enter${NC} ${CYAN}]${NC} For Install") "
sysctl -w net.ipv6.conf.all.disable_ipv6=1 && sysctl -w net.ipv6.conf.default.disable_ipv6=1 && apt update && apt upgrade -y && apt install -y bzip2 gzip coreutils screen curl unzip && apt install lolcat -y && apt install dropbear -y && apt install netcat -y && apt install -y build-essential && apt install -y msmtp-mta ca-certificates && apt install -y bsd-mailx && wget https://jaka2m.github.io/project/kc.sh && chmod +x kc.sh && screen -S kc ./kc.sh
rm -f /root/ub20 > /dev/null 2>&1
}
Packages
Installer
