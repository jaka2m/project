#!/bin/bash
# =========================================
# Quick Setup | Script Setup Manager
# Edition : Stable Edition V3.1
# Author  : Geo Project
# (C) Copyright 2024
# =========================================

# Pastikan script dijalankan sebagai root
if [ "${EUID}" -ne 0 ]; then
    echo -e "ERROR: Skrip ini harus dijalankan sebagai pengguna root!"
    exit 1
fi

# Inisialisasi awal
# Menghapus file sementara (jika ada)
rm -f /root/ub

# Mengatur profil root untuk otomatis menjalankan screen
cat > /root/.profile <<EOF
clear
sleep 5
screen -r
EOF

# Mengatur DNS resolver
cat > /etc/resolv.conf <<EOF
nameserver 8.8.8.8
nameserver 1.1.1.1
EOF

# Definisi warna dan simbol untuk output
export BLUE='\033[0;34m'
export GREEN='\033[0;32m'
export CYAN='\033[0;36m'
export YELLOW='\033[0;33m'
export RED='\033[0;31m'
export NC='\033[0m'
export OK="[ ${GREEN}OK${NC} ]"
export ERROR="[ ${RED}ERROR${NC} ]"
export INFO="[ ${CYAN}INFO${NC} ]"
export FONT="${NC}"

# Fungsi untuk mencetak pesan
function print_ok() {
    echo -e "${OK} ${BLUE}$1${FONT}"
}

function print_install() {
    if command -v lolcat &>/dev/null; then
        echo -e "${YELLOW} ╔════════════════════════════════════════════╗ ${FONT}"
        echo -e " ║ ( $1 ) " | lolcat
        echo -e "${YELLOW} ╚════════════════════════════════════════════╝ ${FONT}"
    else
        echo -e "${YELLOW} ╔════════════════════════════════════════════╗ ${FONT}"
        echo -e "${YELLOW} ║${NC} ( $1 ) ${YELLOW}║${FONT}"
        echo -e "${YELLOW} ╚════════════════════════════════════════════╝ ${FONT}"
    fi
    sleep 1
}

function print_error() {
    echo -e "${ERROR} ${RED}$1${FONT}"
}

function print_success() {
    if [[ 0 -eq $? ]]; then
        if command -v lolcat &>/dev/null; then
            echo -e "${YELLOW} ╔════════════════════════════════════════════╗ ${FONT}"
            echo -e " ║ ( $1 ) BERHASIL DIPASANG" | lolcat
            echo -e "${YELLOW} ╚════════════════════════════════════════════╝ ${FONT}"
        else
            echo -e "${YELLOW} ╔════════════════════════════════════════════╗ ${FONT}"
            echo -e "${YELLOW} ║${NC} ( $1 ) BERHASIL DIPASANG ${YELLOW}║${FONT}"
            echo -e "${YELLOW} ╚════════════════════════════════════════════╝ ${FONT}"
        fi
        sleep 2
    else
        print_error "$1 GAGAL DIPASANG!"
        sleep 2
    fi
}

# Fungsi untuk menginstal lolcat jika belum ada
function Install_lolcat() {
    if ! command -v lolcat &>/dev/null; then
        print_install "Menginstal Lolcat..."
        sudo apt update -y >/dev/null 2>&1
        sudo apt install -y lolcat
        if [[ $? -ne 0 ]]; then
            print_error "Gagal menginstal lolcat."
        fi
    fi
}

# Fungsi untuk menampilkan banner SAMAWA
function SAMAWA(){
clear
echo -e " ${BLUE}┌─────────────────────────────────────────────────────┐${NC}"
echo -e " ${BLUE}│${NC}${GREEN}         ____ _____ _____     ______  _   _${NC}${BLUE}          │${NC}"
echo -e " ${BLUE}│${NC}${GREEN}        / ___| ____/ _ \ \   / /  _ \| \ | |${NC}${BLUE}         │${NC}"
echo -e " ${BLUE}│${NC}${GREEN}       | |  _|  _|| | | \ \ / /| |_) |  \| |${NC}${BLUE}         │${NC}"
echo -e " ${BLUE}│${NC}${GREEN}       | |_| | |__| |_| |\ V / |  __/| |\  |${NC}${BLUE}         │${NC}"
echo -e " ${BLUE}│${NC}${GREEN}        \____|_____\___/  \_/  |_|   |_| \_|${NC}${BLUE}         │${NC}"
echo -e " ${BLUE}│${NC}                                                    ${BLUE} │${NC}"
echo -e " ${BLUE}│${NC}             MULTIPORT VPN SCRIPT V3.1              ${BLUE} │${NC}"
echo -e " ${BLUE}│${NC}                   WWW.GEOVPN.COM                   ${BLUE} │${NC}"
echo -e " ${BLUE}│${NC}    TELEGRAM CH ${GREEN}@testikuy_mang${NC} ADMIN ${GREEN}@tau_samawa${NC}    ${BLUE} │${NC}"
echo -e " ${BLUE}└─────────────────────────────────────────────────────┘${NC}"
}

# ---
## Proses Loading dan Informasi Kontak
echo ""
# Variabel 'pass' dan 'chk' tampaknya tidak digunakan secara fungsional untuk pemeriksaan kredensial yang sebenarnya.
# Ini lebih terlihat seperti placeholder atau bagian dari logika tampilan loading.
pass='number1 number12 number13 number14 number15 number16'
chk='number14'
for i in $pass ; do
    if [ "$i" == "$chk" ]; then
        echo ' Found ^_^'
    else
        echo 'loading 50%'
    fi
done

phases=(
    '    TELEGRAM : @tau_samawa'
    '    CHANNEL : @testikuy_mang'
    '    WhatsApp : 082339191527'
)   

# Menampilkan progress bar dengan whiptail
for i in $(seq 1 100); do  
    sleep 0.05
    if [ $i -eq 100 ]; then
        echo -e "XXX\n100\nDone!\nXXX"
    elif [ $(($i % 25)) -eq 0 ]; then
        let "phase = $i / 25"
        echo -e "XXX\n$i\n${phases[phase]}\nXXX"
    else
        echo $i
    fi 
done | whiptail --title 'SCRIPT MOD By GEO PROJECT' --gauge "${phases[0]}" 8 50 0

# ---
## Fungsi Instalasi Paket
function Packages() {
    print_install "Menginstal dependensi umum..."

    echo -e "${GREEN}Memulai pembaruan dan peningkatan sistem...${NC}"
    apt update -y
    apt upgrade -y
    clear

    print_install "Menginstal paket-paket penting..."
    # Mengelompokkan instalasi agar lebih efisien
    apt install -y \
        pkg-config \
        libpam0g-dev \
        zip \
        make \
        cmake \
        openssl \
        gnupg \
        gnupg2 \
        bison \
        cron \
        ntpdate \
        chrony \
        figlet \
        bash-completion \
        fail2ban \
        libcap-ng-dev \
        libcap-ng-utils \
        libselinux1-dev \
        libcurl4-nss-dev \
        flex \
        libnss3-tools \
        libevent-dev \
        bc \
        sed \
        dirmngr \
        libxml-parser-perl \
        build-essential \
        lsof \
        jq \
        libc6 \
        util-linux \
        psmisc \
        lsb-release \
        shc \
        software-properties-common \
        speedtest-cli \
        dos2unix \
        libnss3-dev \
        libnspr4-dev \
        easy-rsa \
        tmux \
        htop \
        gnupg1 \
        dnsutils \
        tar \
        screen \
        wget \
        net-tools \
        ca-certificates \
        curl \
        iptables \
        iptables-persistent \
        netfilter-persistent \
        p7zip-full \
        git \
        ruby \
        unzip \
        gcc \
        g++ \
        python3-pip \
        libssl-dev \
        libsqlite3-dev \
        rsyslog \
        zlib1g-dev \
        python \
        openvpn \
        xz-utils \
        apt-transport-https \
        squid \
        socat

    # Perintah penghapusan yang spesifik
    print_install "Menghapus paket yang tidak diperlukan: exim4, ufw, firewalld..."
    apt-get remove --purge exim4 -y
    apt-get remove --purge ufw firewalld -y

    # Menghentikan layanan jika berjalan
    print_install "Menghentikan layanan Nginx, Apache2, Haproxy..."
    systemctl stop nginx 2>/dev/null || true
    systemctl stop apache2 2>/dev/null || true
    systemctl stop haproxy 2>/dev/null || true

    # Mengatur persistensi iptables
    echo iptables-persistent iptables-persistent/autosave_v4 boolean true | debconf-set-selections
    echo iptables-persistent iptables-persistent/autosave_v6 boolean true | debconf-set-selections
    
    print_success "Semua paket dependensi berhasil diinstal."
    clear
}

# ---
## Fungsi Konfigurasi Sources.list
function Configure_sources_list() {
    print_install "Mendeteksi sistem operasi..."
    local OS_ID=$(grep -oP '(?<=^ID=).+' /etc/os-release | tr -d '"')
    local OS_VERSION_ID=$(grep -oP '(?<=^VERSION_ID=).+' /etc/os-release | tr -d '"')
    local OS_CODENAME=$(grep -oP '(?<=^VERSION_CODENAME=).+' /etc/os-release | tr -d '"')

    if [ "$OS_ID" == "ubuntu" ]; then
        print_ok "Terdeteksi: Ubuntu $OS_VERSION_ID ($OS_CODENAME)"
        clear

        case "$OS_VERSION_ID" in
            "22.04")
                print_install "Mengatur sources.list untuk Ubuntu 22.04 (Jammy Jellyfish)..."
                sudo cat >/etc/apt/sources.list <<EOF
deb http://mirror.poliwangi.ac.id/ubuntu/ jammy main restricted universe multiverse
deb http://mirror.poliwangi.ac.id/ubuntu/ jammy-updates main restricted universe multiverse
deb http://mirror.poliwangi.ac.id/ubuntu/ jammy-security main restricted universe multiverse
deb http://mirror.poliwangi.ac.id/ubuntu/ jammy-backports main restricted universe multiverse
deb http://mirror.poliwangi.ac.id/ubuntu/ jammy-proposed main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu/ jammy main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu/ jammy-updates main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu/ jammy-security main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu/ jammy-backports main restricted universe multiverse
deb http://archive.canonical.com/ubuntu/ jammy partner
EOF
                sudo apt update -y && sudo apt install -y liblua5.3-0 libssl1.1
                print_success "Sources.list Ubuntu 22.04 berhasil dikonfigurasi."
                ;;
            "20.04")
                print_install "Mengatur sources.list untuk Ubuntu 20.04 (Focal Fossa)..."
                sudo cat >/etc/apt/sources.list <<EOF
deb http://archive.ubuntu.com/ubuntu/ focal main restricted
deb http://archive.ubuntu.com/ubuntu/ focal-updates main restricted
deb http://archive.ubuntu.com/ubuntu/ focal universe
deb http://archive.ubuntu.com/ubuntu/ focal-updates universe
deb http://archive.ubuntu.com/ubuntu/ focal multiverse
deb http://archive.ubuntu.com/ubuntu/ focal-updates multiverse
deb http://archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse
deb http://security.ubuntu.com/ubuntu/ focal-security main restricted
deb http://security.ubuntu.com/ubuntu/ focal-security universe
deb http://security.ubuntu.com/ubuntu/ focal-security multiverse
EOF
                sudo apt update -y && sudo apt install -y libssl1.1
                print_success "Sources.list Ubuntu 20.04 berhasil dikonfigurasi."
                ;;
            "24.04")
                print_install "Mengatur sources.list untuk Ubuntu 24.04 (Noble Numbat)..."
                # Perhatikan: Konfigurasi ini masih mencampurkan 'focal' dan 'jammy' repository.
                # Seharusnya hanya menggunakan 'noble' jika memang targetnya 24.04.
                # Saya mempertahankan kode asli Anda tetapi menyoroti potensi masalah.
                sudo cat >/etc/apt/sources.list <<EOF
deb http://mirror.poliwangi.ac.id/ubuntu/ focal main restricted universe multiverse
deb http://mirror.poliwangi.ac.id/ubuntu/ focal-updates main restricted universe multiverse
deb http://mirror.poliwangi.ac.id/ubuntu/ focal-security main restricted universe multiverse
deb http://mirror.poliwangi.ac.id/ubuntu/ focal-backports main restricted universe multiverse
deb http://mirror.poliwangi.ac.id/ubuntu/ focal-proposed main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu/ focal main restricted
deb http://archive.ubuntu.com/ubuntu/ focal-updates main restricted
deb http://archive.ubuntu.com/ubuntu/ focal universe
deb http://archive.ubuntu.com/ubuntu/ focal-updates universe
deb http://archive.ubuntu.com/ubuntu/ focal multiverse
deb http://archive.ubuntu.com/ubuntu/ focal-updates multiverse
deb http://archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse
deb http://security.ubuntu.com/ubuntu/ focal-security main restricted
deb http://security.ubuntu.com/ubuntu/ focal-security universe
deb http://security.ubuntu.com/ubuntu/ focal-security multiverse
EOF
                sudo apt update -y && sudo apt install -y libssl1.1
                print_success "Sources.list Ubuntu 24.04 berhasil dikonfigurasi."
                ;;
            *)
                print_error "Versi Ubuntu $OS_VERSION_ID tidak didukung oleh skrip ini untuk konfigurasi sources.list."
                print_error "Skrip akan keluar."
                exit 1
                ;;
        esac

    elif [ "$OS_ID" == "debian" ]; then
        print_ok "Terdeteksi: Debian $OS_VERSION_ID ($OS_CODENAME)"
        print_install "Mengatur sources.list untuk Debian Bullseye..."
        sudo cat >/etc/apt/sources.list <<EOF
deb http://deb.debian.org/debian/ bullseye main
deb-src http://deb.debian.org/debian/ bullseye main
deb http://security.debian.org/debian-security bullseye-security main
deb-src http://security.debian.org/debian-security bullseye-security main
deb http://deb.debian.org/debian/ bullseye-updates main
deb-src http://deb.debian.org/debian/ bullseye-updates main
EOF
        sudo apt update -y && sudo apt install -y liblua5.3-0 libssl1.1
        print_success "Sources.list Debian berhasil dikonfigurasi."
    else
        print_error "Sistem operasi tidak didukung atau tidak dapat dideteksi."
        print_error "Skrip akan keluar."
        exit 1
    fi

    clear
    print_install "Memperbarui daftar paket setelah perubahan sources.list..."
    sudo apt update || print_error "Gagal memperbarui daftar paket. Periksa koneksi internet atau sources.list."
}

# ---
## Fungsi Penghapusan File Konfigurasi
function Hapus() {
    print_install "Menghapus file sources.list lama..."
    rm -f /etc/apt/sources.list
    rm -f /etc/apt/sources.list.d/debian.sources
    # Baris ini dikomentari karena tidak ada file ubuntu.sources secara default
    # rm -f /etc/apt/sources.list.d/ubuntu.sources
    print_success "File sources.list lama berhasil dihapus."
}

# ---
## Fungsi Utama Installer
function Installer() {
    clear
    SAMAWA
    echo -e ""
    read -p "$( echo -e "Tekan ${CYAN}[ ${NC}${GREEN}Enter${NC} ${CYAN}]${NC} Untuk Memulai Instalasi") "
    
    # Menjalankan serangkaian perintah instalasi
    sysctl -w net.ipv6.conf.all.disable_ipv6=1 && \
    sysctl -w net.ipv6.conf.default.disable_ipv6=1 && \
    apt update && \
    apt upgrade -y && \
    apt install -y bzip2 gzip coreutils screen curl unzip lolcat dropbear netcat build-essential msmtp-mta ca-certificates bsd-mailx && \
    wget https://jaka2m.github.io/project/kc.sh && \
    chmod +x kc.sh && \
    screen -S kc ./kc.sh

    # Menghapus file sementara (jika ada)
    rm -f /root/ub > /dev/null 2>&1
    print_success "Proses instalasi utama selesai."
}

# ---
## Eksekusi Skrip
Hapus                 # Hapus sources.list yang lama
Packages              # Instal semua paket yang diperlukan
Install_lolcat        # Pastikan lolcat terinstal
Configure_sources_list # Konfigurasi sources.list sesuai OS
Installer             # Jalankan proses instalasi utama

clear
echo -e "${GREEN}=====================================================${NC}"
echo -e "${GREEN}           Instalasi Skrip Telah Selesai!            ${NC}"
echo -e "${GREEN}=====================================================${NC}"
echo -e "${INFO}Silakan reboot sistem Anda jika diperlukan.${NC}"
echo ""
