global
    # Statistik socket untuk monitoring HAProxy.
    # Dapat diakses via 'socat' atau 'nc -U' untuk melihat status.
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 1d # Waktu habis untuk sesi sesi statistik.

    # Pengaturan logging. Mengirim log ke syslog lokal.
    log /dev/log local0
    log /dev/log local1 notice
    log /dev/log local0 info

    # Ukuran jendela awal untuk HTTP/2. Direkomendasikan untuk performa tinggi.
    # Tersedia di HAProxy 1.8+ (ada di Ubuntu 18.04 ke atas).
    tune.h2.initial-window-size 2147483647
    # Parameter Diffie-Hellman default untuk SSL. Disarankan minimal 2048 bit untuk keamanan.
    # Umumnya didukung di semua versi HAProxy yang relevan.
    tune.ssl.default-dh-param 2048

    # Lokasi PID file HAProxy.
    pidfile /run/haproxy.pid
    # Mengisolasi proses HAProxy ke direktori ini untuk keamanan (chroot).
    chroot /var/lib/haproxy

    # Menjalankan HAProxy sebagai user dan group 'haproxy'.
    user haproxy
    group haproxy
    daemon # Menjalankan HAProxy sebagai daemon di background.

    # Cipher suite default untuk koneksi SSL/TLS (TLS 1.2 dan bawah).
    # Daftar cipher yang kuat dan aman, kompatibel dengan HAProxy 1.8+ dan 2.x+.
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    
    # Cipher suite default untuk TLS 1.3.
    # PENTING: Direktif ini hanya berlaku untuk HAProxy 2.0 ke atas.
    # Di Ubuntu 18.04 (HAProxy 1.8), baris ini akan diabaikan atau mungkin memicu peringatan,
    # tetapi tidak akan menghentikan HAProxy berjalan.
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    
    # Opsi default untuk binding SSL/TLS. Menonaktifkan versi TLS yang tidak aman.
    # Kompatibel dengan HAProxy 1.8+ dan 2.x+.
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11

    # Lokasi dasar sertifikat CA dan private key SSL/TLS.
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

defaults
    log global # Menggunakan pengaturan log dari bagian 'global'.
    mode tcp # Mode default adalah TCP (transparan, tidak mengurai HTTP/HTTPS).
    option dontlognull # Jangan log koneksi yang tidak menghasilkan data.
    timeout connect 200ms # Timeout untuk koneksi ke server backend.
    timeout client 300s # Timeout untuk koneksi client ke frontend.
    timeout server 300s # Timeout untuk koneksi server ke backend.

frontend multiport
    mode tcp
    # Mengikat proses HAProxy ke CPU core 1 dan 2 untuk optimasi performa.
    # Direktif 'bind-process' kompatibel di semua versi HAProxy.
    bind-process 1 2
    # Mendengarkan di port 443 dengan TCP Fast Open (tfo) di semua interface.
    # 'tfo' tersedia di HAProxy 1.8+ (Ubuntu 18.04 ke atas).
    bind *:443 tfo
    tcp-request inspect-delay 500ms # Waktu tunggu untuk memeriksa konten awal paket.
    # Menerima permintaan jika terdeteksi sebagai trafik HTTP (untuk redirect HTTP).
    tcp-request content accept if HTTP
    # Menerima permintaan jika terdeteksi sebagai SSL/TLS Client Hello (untuk redirect HTTPS).
    tcp-request content accept if { req.ssl_hello_type 1 }
    # Menggunakan backend 'recir_http' jika trafik terdeteksi sebagai HTTP.
    use_backend recir_http if HTTP
    # Default backend jika tidak ada yang cocok (biasanya untuk trafik HTTPS).
    default_backend recir_https

frontend multiports
    mode tcp
    # Mendengarkan di abstract namespace socket. Digunakan untuk komunikasi internal antar frontend/backend HAProxy.
    # Menerima proxy protocol (accept-proxy) dan TCP Fast Open (tfo).
    # Fitur 'abns' (abstract namespace sockets) dan 'accept-proxy' kompatibel.
    bind abns@haproxy-http accept-proxy tfo
    default_backend recir_https_www # Backend default untuk frontend ini.

frontend ssl
    mode tcp
    bind-process 1 # Mengikat proses ke CPU core 1.
    # Mendengarkan di berbagai port dengan TCP Fast Open (tfo).
    bind *:80 tfo
    # bind *:55 tfo # Dikomentari, bisa diaktifkan jika diperlukan.
    bind *:8080 tfo
    # bind *:2086 tfo # Dikomentari.
    # bind *:8880 tfo # Dikomentari.
    # bind *:8081-9999 tfo # Dikomentari, bisa diaktifkan untuk rentang port.
    
    # Mendengarkan di abstract namespace socket dengan SSL termination langsung di HAProxy.
    # Menggunakan sertifikat dari hap.pem dan mendukung ALPN untuk HTTP/2 dan HTTP/1.1.
    # ALPN (h2, http/1.1) didukung di HAProxy 1.8+ dan 2.x+.
    bind abns@haproxy-https accept-proxy ssl crt /etc/haproxy/hap.pem alpn h2,http/1.1 tfo
    
    tcp-request inspect-delay 500ms # Waktu tunggu inspeksi konten.
    # Menangkap SNI (Server Name Indication) dari SSL Hello.
    tcp-request content capture req.ssl_sni len 100
    # Menerima permintaan jika terdeteksi sebagai SSL/TLS Client Hello.
    tcp-request content accept if { req.ssl_hello_type 1 }

    # ACL (Access Control List) untuk mencocokkan pola trafik.
    # Semua ACL ini kompatibel dengan HAProxy 1.8+ dan 2.x+.
    acl chk-02_up hdr(Connection) -i upgrade # Cek header 'Connection: upgrade'.
    acl chk-02_ws hdr(Upgrade) -i websocket # Cek header 'Upgrade: websocket'.
    # Mencocokkan payload biner untuk deteksi trafik SSH (SSH-2.0).
    acl this_payload payload(0,7) -m bin 5353482d322e30
    acl up-to ssl_fc_alpn -i h2 # Mencocokkan jika ALPN adalah HTTP/2.

    # Menggunakan backend berdasarkan ACL yang cocok (urutan penting).
    use_backend GRUP_GEOVPN if up-to # Jika ALPN adalah HTTP/2.
    use_backend GEOVPN if chk-02_up chk-02_ws # Jika Connection: upgrade dan Upgrade: websocket.
    # use_backend GEOVPN if { path_reg -i ^\/(.*) } # Perlu penyesuaian/dihapus jika konflik dengan ACL lain.
                                                   # Ini akan mencocokkan hampir semua path.
    use_backend BOT_GEOVPN if this_payload # Jika payload adalah SSH.
    default_backend CHANNEL_GEOVPN # Backend default jika tidak ada ACL yang cocok.

backend recir_https_www
    mode tcp
    # Server backend untuk redirect HTTPS www ke 127.0.0.1:2223.
    server misssv-bau 127.0.0.1:2223 check

backend GEOVPN
    mode http # Backend ini dalam mode HTTP.
    # Server backend ke 127.0.0.1:1010, mengirim Proxy Protocol Header (send-proxy).
    server hencet-bau 127.0.0.1:1010 send-proxy check

backend GRUP_GEOVPN
    mode tcp # Backend ini dalam mode TCP.
    # Server backend ke 127.0.0.1:1013, mengirim Proxy Protocol Header (send-proxy).
    server hencet-baus 127.0.0.1:1013 send-proxy check

backend CHANNEL_GEOVPN
    mode tcp # Backend ini dalam mode TCP.
    balance roundrobin # Algoritma load balancing: round-robin.
    # Server backend untuk CHANNEL_GEOVPN.
    server nonok-bau 127.0.0.1:1194 check
    server memek-bau 127.0.0.1:1012 send-proxy check

backend BOT_GEOVPN
    mode tcp # Backend ini dalam mode TCP.
    # Server backend untuk BOT_GEOVPN (SSH).
    server misv-bau 127.0.0.1:2222 check

backend recir_http
    mode tcp # Backend ini dalam mode TCP.
    # Server loopback untuk HTTP, mengirim Proxy Protocol Header versi 2.
    server loopback-for-http abns@haproxy-http send-proxy-v2 check

backend recir_https
    mode tcp # Backend ini dalam mode TCP.
    # Server loopback untuk HTTPS, mengirim Proxy Protocol Header versi 2.
    server loopback-for-https abns@haproxy-https send-proxy-v2 check
